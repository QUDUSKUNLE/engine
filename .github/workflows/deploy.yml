name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create .env file from secrets
        run: |
          cat << EOF > .env
          PORT=${{ secrets.PORT }}
          DB_URL=${{ secrets.DB_URL }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          JWT_EXPIRATION_HOURS=${{ secrets.JWT_EXPIRATION_HOURS }}
          ALLOW_ORIGINS=${{ secrets.ALLOW_ORIGINS }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          EMAIL_HOST=${{ secrets.EMAIL_HOST }}
          EMAIL_PORT=${{ secrets.EMAIL_PORT }}
          GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}
          GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}
          GMAIL_FROM_ADDRESS=${{ secrets.GMAIL_FROM_ADDRESS }}
          PAYSTACK_SECRET_KEY=${{ secrets.PAYSTACK_SECRET_KEY }}
          PAYSTACK_PUBLIC_KEY=${{ secrets.PAYSTACK_PUBLIC_KEY }}
          PAYSTACK_BASE_URL=${{ secrets.PAYSTACK_BASE_URL }}
          SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
          EMAIL_FROM_ADDRESS=${{ secrets.EMAIL_FROM_ADDRESS }}
          APP_URL=${{ secrets.APP_URL }}
          EOF

      - name: Copy .env for Docker build
        run: cp .env .env.docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ENV_FILE=.env.docker
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Deploy to Railway
      - name: Deploy to Railway
        uses: railwayapp/cli-action@v1
        with:
          railwayToken: ${{ secrets.RAILWAY_TOKEN }}
          command: up --service=medicue-api

      # # Deploy to Render
      # - name: Deploy to Render
      #   uses: johnbeynon/render-deploy-action@v0.0.8
      #   with:
      #     service-id: ${{ secrets.RENDER_SERVICE_ID }}
      #     api-key: ${{ secrets.RENDER_API_KEY }}

      # # Deploy to VPS (via SSH)
      # - name: Deploy to VPS
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USERNAME }}
      #     key: ${{ secrets.VPS_SSH_KEY }}
      #     port: ${{ secrets.VPS_PORT }}
      #     script: |
      #       cd /path/to/your/app
      #       docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #       docker-compose down
      #       docker-compose up -d
