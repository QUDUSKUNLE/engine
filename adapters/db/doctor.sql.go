// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: doctor.sql

package db

import (
	"context"
)

const getSampleDoctor = `-- name: GetSampleDoctor :one
SELECT 'Male'::doctor as doctor
`

// This is just a helper query to make sqlc generate the Doctor type
func (q *Queries) GetSampleDoctor(ctx context.Context) (Doctor, error) {
	row := q.db.QueryRow(ctx, getSampleDoctor)
	var doctor Doctor
	err := row.Scan(&doctor)
	return doctor, err
}

const getSampleDoctorArray = `-- name: GetSampleDoctorArray :one
SELECT ARRAY['Male']::doctor[] as doctors
`

// This is just a helper query to make sqlc generate the Doctor type as array
func (q *Queries) GetSampleDoctorArray(ctx context.Context) ([]Doctor, error) {
	row := q.db.QueryRow(ctx, getSampleDoctorArray)
	var doctors []Doctor
	err := row.Scan(&doctors)
	return doctors, err
}
